const OpenAI = require('openai');

class SpellCorrectionService {
    constructor() {
        // Inicializar OpenAI para corre√ß√µes inteligentes
        this.openai = new OpenAI({
            apiKey: process.env.OPENAI_API_KEY
        });
    }


    // Corre√ß√£o inteligente com IA
    async correctWithAI(message) {
        if (!message || typeof message !== 'string') {
            return message;
        }

        // Verificar se a API da OpenAI est√° configurada
        if (!process.env.OPENAI_API_KEY) {
            console.log('‚ö†Ô∏è OpenAI API key n√£o configurada, usando corre√ß√µes b√°sicas');
            return message;
        }

        try {
            const prompt = `Voc√™ √© um assistente especializado em corrigir erros de digita√ß√£o em mensagens sobre Pok√©mon. 
            
TAREFA: Corrigir apenas erros √≥bvios de digita√ß√£o, mantendo a inten√ß√£o original da mensagem.

REGRAS:
1. Corrija apenas erros claros de digita√ß√£o (ex: charizad ‚Üí charizard)
2. Mantenha a estrutura e inten√ß√£o da mensagem
3. N√ÉO altere palavras que est√£o corretas
4. Foque em nomes de Pok√©mon e tipos
5. Se n√£o houver erros √≥bvios, retorne a mensagem original
6. Responda APENAS com a mensagem corrigida, sem explica√ß√µes
7. N√ÉO adicione aspas duplas na resposta

MENSAGEM ORIGINAL: ${message}

MENSAGEM CORRIGIDA:`;

            const completion = await this.openai.chat.completions.create({
                model: "gpt-3.5-turbo",
                messages: [
                    {
                        role: "system",
                        content: prompt
                    }
                ],
                max_tokens: 100,
                temperature: 0.1, // Baixa temperatura para corre√ß√µes precisas
            });

            const rawResponse = completion.choices[0].message.content;
            // Limpar aspas duplas que possam ter sido adicionadas pela IA
            let correctedMessage = rawResponse.trim();
            
            // Remover aspas duplas do in√≠cio e fim se existirem
            if (correctedMessage.startsWith('"') && correctedMessage.endsWith('"')) {
                correctedMessage = correctedMessage.slice(1, -1);
            }
            
            // Log apenas se houver mudan√ßa significativa
            if (correctedMessage !== message) {
                console.log(`üîç Corre√ß√£o aplicada: "${message}" ‚Üí "${correctedMessage}"`);
            }
            
            // Verificar se houve mudan√ßa significativa
            if (correctedMessage !== message && correctedMessage.length > 0) {
                console.log(`ü§ñ Corre√ß√£o IA: "${message}" ‚Üí "${correctedMessage}"`);
                return correctedMessage;
            }
            
            return message;
        } catch (error) {
            console.error('Erro na corre√ß√£o com IA:', error.message);
            return message; // Retorna original em caso de erro
        }
    }

    // Fun√ß√£o principal para corrigir mensagem completa
    async correctMessage(message) {
        if (!message || typeof message !== 'string') {
            return message;
        }

        // Aplicar apenas corre√ß√£o inteligente com IA
        try {
            const aiCorrected = await this.correctWithAI(message);
            return aiCorrected;
        } catch (error) {
            console.error('Erro na corre√ß√£o IA, retornando mensagem original:', error.message);
            return message; // Retorna original em caso de erro
        }
    }
}

module.exports = SpellCorrectionService;
